{"version":3,"sources":["assets/images/logo.png","components/Footer.js","config/firebase.js","redux/types.js","components/Header.js","redux/actions/authActions.js","views/Dashboard.js","redux/actions/reportActions.js","views/Maps.js","redux/actions/usersActions.js","views/Landing.js","assets/images/login_side_img.png","views/Login.js","assets/images/check.png","views/Register.js","routes/index.js","layout/Main.js","layout/Auth.js","App.js","redux/reducers/authReducers.js","redux/reducers/reportReducers.js","redux/reducers/usersReducers.js","redux/reducers/rootReducers.js","redux/store.js","index.js"],"names":["Footer","className","Container","fluid","Row","Col","md","src","logo","alt","height","Component","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","storage","LOGIN_FAIL","LOGIN_SUCCESS","REGISTER_FAIL","REGISTER_SUCCESS","LOGOUT_SUCCESS","ACTION_REQUEST","ACTION_REQUEST_END","LOGIN_REQUEST","LOGIN_REQUEST_END","FETCH_REPORT","FETCH_USER","FETCH_MY_REPORT","Header","props","toggle","setState","isOpen","state","logout","this","Navbar","color","light","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","NavLink","connect","dispatch","console","log","auth","signOut","then","data","type","uid","user","error","catch","Geocode","setApiKey","Dashboard","modal","viewToggle","viewModal","editToggle","editModal","handlefieldChange","e","target","name","value","handleFile","files","moveMarker","coord","mapPosition","lat","latLng","lng","markerPosition","editMoveMark","handleChange","address","handleSelect","a","geocodeByAddress","results","getLatLng","selectedAddress","onInfoWindowClose","event","handleSubmit","preventDefault","obj","myFile","title","description","coordinates","created_by","addReport","handleUpdate","myFileName","id","reportId","updateReport","editReport","geoPoint","defaultMapPosition","defaultMarkerPosition","fetchMyReports","navigator","geolocation","getCurrentPosition","pos","coords","latitude","longitude","myReports","Card","CardHeader","Button","CardBody","Table","responsive","map","report","index","file","controls","url","width","moment","unix","createdAt","seconds","format","status","_lat","_long","deleteReport","Modal","centered","size","ModalHeader","ModalBody","style","google","zoom","initialCenter","undefined","position","ModalFooter","Form","onSubmit","FormGroup","Label","Input","required","onChange","defaultValue","searchOptions","componentRestrictions","country","onSelect","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","suggestion","active","backgroundColor","cursor","containerStyle","center","onClose","padding","margin","draggable","onDragend","t","xs","collection","where","onSnapshot","query","docs","forEach","doc","push","toDate","delete","toast","success","alert","message","GeoPoint","customKey","fileName","finalType","split","ext2","slice","lastIndexOf","file_name","toLowerCase","ref","put","lets","getDownloadURL","newReport","Timestamp","now","add","warning","child","update","GoogleApiWrapper","Maps","getUserEmail","users","length","find","email","fetchReports","fetchUsers","reports","CardTitle","tag","CardText","Badge","Landing","minHeight","marginBottom","to","Login","handleLogin","creds","password","login","registerComplete","background","borderRadius","fontSize","border","Spinner","logo_side","signInWithEmailAndPassword","Register","handleRegister","register","redirect","history","fontWeight","check","registered","route","path","component","layout","requested","createUserWithEmailAndPassword","set","res","Main","getRoutes","routes","prop","key","from","Auth","App","render","initState","authError","authReducer","action","localStorage","clear","reportReducer","usersReducer","rootReducer","combineReducers","comp","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","serializedUid","getItem","JSON","parse","checkLocalStorage","applyMiddleware","thunk","subscribe","stringify","setItem","saveToLocalStorage","getState","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.64b1ce39.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.123efa46.png\";","import React, { Component } from 'react'\nimport { Row, Col, Container } from 'reactstrap'\nimport logo from \"../assets/images/logo.png\"\nexport class Footer extends Component {\n    render() {\n        return (\n            <>\n                <footer className=\"footer\">\n                    <Container fluid className=\"bottom-footer\">\n                        <Row className=\"justify-content-center\">\n                            <Col md={5}>\n                                <div className=\"d-flex align-items-center\">\n                                    <img src={logo} alt=\"\" height=\"150px\" />\n                                    <h3 className=\"mn-2\">Reporting Main Platform</h3>\n                                </div>\n                            </Col>\n                            <Col md={5}>\n                                <p>\n                                    Lorem ipsum dolor sit amet consectetur adipisicing elit. Maxime mollitia,\n                                    molestiae quas vel sint commodi repudiandae consequuntur voluptatum laborum\n                                    numquam blanditiis harum quisquam eius sed odit fugiat iusto fuga praesentium\n                                    optio, eaque rerum! Provident similique accusantium nemo autem.\n                                </p>\n                            </Col>\n                        </Row>\n                    </Container>\n                </footer>\n            </>\n        )\n    }\n}\n\nexport default Footer\n","import firebase from \"firebase/app\"\nimport \"firebase/firestore\"\nimport \"firebase/auth\"\nimport \"firebase/storage\"\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBHFT7c-cL-ota7yTBfCYjCF9gtoMQ5Wew\",\n    authDomain: \"reporting-main.firebaseapp.com\",\n    projectId: \"reporting-main\",\n    storageBucket: \"reporting-main.appspot.com\",\n    messagingSenderId: \"1051456400117\",\n    appId: \"1:1051456400117:web:8b96e3744070a63e7573bc\",\n    measurementId: \"G-WREYHWZ1YQ\"\n  };\n  \n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nfirebase.firestore();\nexport const storage = firebase.storage()\n\nexport default firebase","export const LOGIN_FAIL = \"LOGIN_FAIL\"\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\"\nexport const REGISTER_FAIL = \"REGISTER_FAIL\"\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\"\nexport const LOGOUT_FAIL = \"LOGOUT_FAIL\"\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\"\nexport const ACTION_REQUEST = \"ACTION_REQUEST\"\nexport const ACTION_REQUEST_END = \"ACTION_REQUEST_END\"\nexport const LOGIN_REQUEST = \"LOGIN_REQUEST\"\nexport const LOGIN_REQUEST_END = \"LOGIN_REQUEST_END\"\nexport const FETCH_REPORT = \"FETCH_REPORT\"\nexport const FETCH_USER = \"FETCH_USER\"\nexport const FETCH_MY_REPORT = \"FETCH_MY_REPORT\"","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport {\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink,\n} from 'reactstrap'\nimport { logout } from '../redux/actions/authActions'\n\nexport class Header extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            isOpen: false\n        }\n    }\n\n    toggle = () => {\n        this.setState({\n            isOpen: !this.state.isOpen\n        })\n    }\n    render() {\n        const { logout } = this.props\n        return (\n            <>\n                <Navbar color=\"light\" light expand=\"md\">\n                    <NavbarBrand href=\"/\">Reporting Panel</NavbarBrand>\n                    <NavbarToggler onClick={this.toggle} />\n                    <Collapse isOpen={this.state.isOpen} navbar>\n                        <Nav className=\"ml-auto\" navbar>\n                            <NavItem>\n                                <NavLink href=\"/main/dashboard\">Dashboard</NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink href=\"/auth/login\" onClick={logout}>Logout</NavLink>\n                            </NavItem>\n                        </Nav>\n                    </Collapse>\n                </Navbar>\n            </>\n        )\n    }\n}\nexport function mapDispatchToProps(dispatch) {\n    return {\n        logout: () => dispatch(logout())\n    }\n}\nexport default connect(null, mapDispatchToProps)(Header)\n","import firebase from \"../../config/firebase\"\nimport { toast } from 'react-toastify';\nimport { ACTION_REQUEST, ACTION_REQUEST_END, LOGIN_REQUEST, LOGIN_REQUEST_END, LOGIN_FAIL, LOGIN_SUCCESS, LOGOUT_FAIL, LOGOUT_SUCCESS, REGISTER_FAIL, REGISTER_SUCCESS } from \"../types\"\nexport const register = creds => {\n    return async (dispatch) => {\n        dispatch({\n            type: ACTION_REQUEST\n        })\n        firebase\n            .auth()\n            .createUserWithEmailAndPassword(creds.email, creds.password)\n            .then(data => {\n                firebase\n                    .firestore()\n                    .collection(\"users\")\n                    .doc(data.user.uid)\n                    .set({\n                        email: creds.email\n                    })\n                    .then(res => {\n                        dispatch({\n                            type: REGISTER_SUCCESS\n                        })\n                        dispatch({\n                            type: ACTION_REQUEST_END\n                        })\n                        toast.success(\"Account Created Successfully\")\n                    })\n                    .catch(error => {\n                        dispatch({\n                            type: REGISTER_FAIL\n                        })\n                        dispatch({\n                            type: ACTION_REQUEST_END\n                        })\n                        toast.warning(error)\n                    })\n            })\n            .catch(error => {\n                dispatch({\n                    type: REGISTER_FAIL\n                })\n                dispatch({\n                    type: ACTION_REQUEST_END\n                })\n                alert(error)\n                toast.warning(error)\n            })\n    }\n}\n\nexport const registeredComplete = () => {\n    return (dispatch) => {\n        dispatch({\n            type: \"REGISTER_COMPLETE\"\n        })\n    }\n}\n\nexport const login = creds => {\n    return (dispatch) => {\n        dispatch({\n            type: LOGIN_REQUEST\n        })\n        firebase\n            .auth()\n            .signInWithEmailAndPassword(creds.email, creds.password)\n            .then(data => {\n                firebase\n                    .firestore()\n                    .collection(\"users\")\n                    .doc(data.user.uid)\n                    .onSnapshot(doc => {\n                        console.log(\"daar\", data.user.id)\n                        dispatch({\n                            type: LOGIN_SUCCESS,\n                            user: { id: doc.id, ...doc.data() },\n                            error: \"\"\n                        })\n                        dispatch({\n                            type: LOGIN_REQUEST_END\n                        })\n                    })\n            })\n            .catch(error => {\n                dispatch({\n                    type: LOGIN_FAIL,\n                    uid: \"\",\n                    error: error\n                })\n                dispatch({\n                    type: LOGIN_REQUEST_END\n                })\n                alert(error)\n                toast.warning(error)\n            })\n    }\n}\n\nexport const logout = () => {\n    console.log(\"logit\")\n    return (dispatch) => {\n        firebase\n            .auth()\n            .signOut()\n            .then(data => {\n                dispatch({\n                    type: LOGOUT_SUCCESS,\n                    uid: \"\",\n                    user: \"\",\n                    error: \"\",\n                });\n            })\n            .catch((error) => {\n                dispatch({\n                    type: LOGOUT_FAIL,\n                    uid: \"\",\n                    error: error,\n                });\n            });\n    }\n}","import React, { Component } from 'react'\nimport moment from 'moment';\nimport {\n    Button, Card, CardBody, CardHeader, Form, FormGroup, Label, Input,\n    Container, Table, Modal, ModalHeader, ModalBody, ModalFooter, Col,\n    Badge,\n    Row\n} from 'reactstrap'\nimport {\n    withScriptjs,\n    withGoogleMap,\n    GoogleMap,\n    InfoWindow,\n    Marker,\n} from \"react-google-maps\";\nimport { Map, GoogleApiWrapper } from 'google-maps-react';\nimport { Marker as GoogleMarker } from 'google-maps-react';\nimport PlacesAutocomplete from \"react-places-autocomplete\";\nimport { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\nimport Geocode from \"react-geocode\";\nimport { connect } from 'react-redux';\nimport { addReport, deleteReport, fetchMyReports, updateReport } from '../redux/actions/reportActions';\nGeocode.setApiKey(\"AIzaSyCwVH3GTF_ZcPxr_diMo_AyVAW3A7GHbKQ\");\nexport class Dashboard extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            modal: false,\n            title: \"\",\n            editReport: \"\",\n            description: \"\",\n            myFile: \"\",\n            myFileName: \"\",\n            reportId: '',\n            viewModal: false,\n            editModal: false,\n            geoPoint: \"\",\n            address: \"\",\n            defaultMapPosition: \"\",\n            mapPosition: {\n                lat: 31.4117257,\n                lng: 35.0818155,\n            },\n            defaultMarkerPosition: \"\",\n            markerPosition: {\n                lat: 0,\n                lng: 0,\n            },\n        }\n    }\n\n    componentDidMount() {\n        this.props.fetchMyReports(this.props.uid);\n        navigator.geolocation.getCurrentPosition(pos => {\n            this.setState({\n                mapPosition: {\n                    lat: pos.coords.latitude,\n                    lng: pos.coords.longitude\n                },\n                markerPosition: {\n                    lat: pos.coords.latitude,\n                    lng: pos.coords.longitude\n                }\n            })\n        })\n    }\n\n    toggle = () => {\n        this.setState({\n            modal: !this.state.modal\n        })\n    }\n    viewToggle = () => {\n        this.setState({\n            viewModal: !this.state.viewModal\n        })\n    }\n    editToggle = () => {\n        this.setState({\n            editModal: !this.state.editModal\n        })\n    }\n    handlefieldChange = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n    handleFile = e => {\n        this.setState({\n            [e.target.name]: e.target.files[0]\n        })\n    }\n    moveMarker = (coord) => {\n        this.setState({\n            mapPosition: {\n                lat: coord.latLng.lat(),\n                lng: coord.latLng.lng()\n            },\n            markerPosition: {\n                lat: coord.latLng.lat(),\n                lng: coord.latLng.lng()\n            }\n        })\n    }\n    editMoveMark = (coord) => {\n        this.setState({\n            mapPosition: {\n                lat: coord.latLng.lat(),\n                lng: coord.latLng.lng()\n            },\n            markerPosition: {\n                lat: coord.latLng.lat(),\n                lng: coord.latLng.lng()\n            }\n        })\n    }\n    handleChange = (address) => {\n        this.setState({ address });\n    };\n    handleSelect = async (address) => {\n        geocodeByAddress(address)\n            .then(results => getLatLng(results[0]))\n            .then(latLng =>\n                // console.log(\"lat\", latLng)\n                this.setState({\n                    mapPosition: { lat: latLng.lat, lng: latLng.lng },\n                    markerPosition: { lat: latLng.lat, lng: latLng.lng },\n                    selectedAddress: address,\n                })\n            )\n            .catch((error) => console.error(\"Error\", error));\n    };\n    onInfoWindowClose = (event) => { };\n\n    handleSubmit = e => {\n        e.preventDefault();\n        let obj = {\n            myFile: this.state.myFile,\n            title: this.state.title,\n            description: this.state.description,\n            coordinates: this.state.mapPosition,\n            created_by: this.props.uid\n        }\n        if (obj != null) {\n            this.props.addReport(obj)\n        }\n        this.setState({\n            title: \"\",\n            description: \"\",\n            myFile: \"\"\n        })\n        this.toggle()\n    }\n\n    handleUpdate = e => {\n        e.preventDefault()\n        let obj = {\n            myFile: this.state.myFile,\n            myFileName: this.state.myFileName,\n            title: this.state.title,\n            description: this.state.description,\n            coordinates: this.state.mapPosition,\n            created_by: this.props.uid,\n            id: this.state.reportId\n        }\n        this.props.updateReport(obj)\n        this.editToggle()\n    }\n\n    render() {\n        const { myReports } = this.props\n        const mapStyles = {\n            width: '100%',\n            height: '100%',\n        };\n\n        // console.log(\"lat\", this.state.markerPosition.lat)\n        // console.log(\"lng\", this.state.markerPosition.lng)\n\n        return (\n            <>\n                <Container className=\"mt-5 mb-5\">\n                    <Card className=\"table-card\">\n                        <CardHeader className=\"bg-white\">\n                            <div className=\"d-flex\">\n                                <h4>My Events</h4>\n                                <Button className=\"ml-auto\" color=\"info\" onClick={this.toggle}>Add Event</Button>\n                            </div>\n                        </CardHeader>\n                        <CardBody>\n                            <Table responsive>\n                                <thead>\n                                    <tr>\n                                        <th>Files</th>\n                                        <th>Title</th>\n                                        <th>Description</th>\n                                        <th>Created at</th>\n                                        <th>Status</th>\n                                        <th>Actions</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                        myReports && myReports.map((report, index) => {\n                                            return (\n                                                <tr key={index}>\n                                                    <td>{\n                                                        report.files.map(file => {\n                                                            return (\n                                                                file.type == \"audio\"\n                                                                    ?\n                                                                    <audio controls src={file.url}> </audio>\n                                                                    :\n                                                                    <img src={file.url} height=\"100px\" width=\"100px\" />\n                                                            )\n                                                        })\n                                                    }</td>\n                                                    <th>{report.title}</th>\n                                                    <td>{report.description}</td>\n                                                    <td>{moment.unix(report.createdAt.seconds).format(\"MM-DD-YYYY hh:mm:ss\")}</td>\n                                                    <td>{report.status}</td>\n                                                    <td>\n                                                        <Button color=\"primary\"\n                                                            onClick={e => {\n                                                                this.setState({\n                                                                    geoPoint: report.coordinates\n                                                                })\n                                                                this.viewToggle()\n                                                            }}\n                                                        >\n                                                            <i className=\"fa fa-map-marker-alt\"></i>\n                                                        </Button>{\" \"}\n                                                        <Button color=\"info\" onClick={() => {\n                                                            this.setState({\n                                                                title: report.title,\n                                                                description: report.description,\n                                                                reportId: report.id,\n                                                                mapPosition: {\n                                                                    lat: report.coordinates._lat,\n                                                                    lng: report.coordinates._long\n                                                                },\n                                                                markerPosition: {\n                                                                    lat: report.coordinates._lat,\n                                                                    lng: report.coordinates._long\n                                                                },\n                                                                myFileName: report.files[0].name\n                                                            })\n                                                            this.editToggle()\n                                                        }}>\n                                                            <i className=\"fas fa-pencil\"></i>\n                                                        </Button>{\" \"}\n                                                        <Button color=\"danger\"\n                                                            onClick={() => {\n                                                                this.props.deleteReport(report.id)\n                                                            }}>\n                                                            <i className=\"fas fa-trash\"></i>\n                                                        </Button>{\" \"}\n                                                    </td>\n                                                </tr>\n                                            )\n                                        })\n                                    }\n                                </tbody>\n                            </Table>\n                        </CardBody>\n                    </Card>\n                </Container>\n\n\n                {/* ********* View Modal *********** */}\n\n\n                <Modal isOpen={this.state.viewModal} toggle={this.state.viewToggle} centered size=\"lg\">\n                    <ModalHeader toggle={this.viewToggle}>Location</ModalHeader>\n                    <ModalBody\n                        style={{\n                            height: 500,\n                            width: \"100%\"\n                        }}\n                    >\n                        <Row>\n                            <Map\n                                google={this.props.google}\n                                zoom={8}\n                                style={mapStyles}\n                                initialCenter={{ lat: 31.4117257, lng: 35.0818155 }}\n                            >\n                                {this.state.geoPoint != undefined\n                                    ?\n                                    <GoogleMarker\n                                        position={{ lat: this.state.geoPoint._lat, lng: this.state.geoPoint._long }}\n                                    />\n                                    :\n                                    null\n                                }\n                            </Map>\n                        </Row>\n                    </ModalBody>\n                    <ModalFooter className=\"mt-2\">\n                        <Button color=\"danger\" onClick={this.viewToggle}>Cancel</Button>\n                    </ModalFooter>\n                </Modal>\n\n\n                {/* ********* End View Modal *********** */}\n\n\n                {/* ********* Edit Event Modal *********** */}\n\n\n                <Modal isOpen={this.state.editModal} toggle={this.editToggle} centered>\n                    <ModalHeader toggle={this.editToggle}>Update Event</ModalHeader>\n                    <Form onSubmit={\n                        this.handleUpdate\n                    }>\n                        <ModalBody>\n\n                            <FormGroup>\n                                <Label>Title</Label>\n                                <Input\n                                    type=\"text\"\n                                    name=\"title\"\n                                    required\n                                    onChange={this.handlefieldChange}\n                                    defaultValue={this.state.title}\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label>Description</Label>\n                                <Input\n                                    type=\"textarea\"\n                                    name=\"description\"\n                                    required\n                                    onChange={this.handlefieldChange}\n                                    defaultValue={this.state.description}\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label>Files (Audio/Image)</Label>\n                                <Input type=\"file\" name=\"myFile\"\n                                    onChange={this.handleFile}\n                                />\n                            </FormGroup>\n                            <div className=\"form-group text-left\" style={{\n                                height: \"400px\"\n                            }}>\n                                <PlacesAutocomplete\n                                    className=\"autocomplete-signup\"\n                                    searchOptions={{\n                                        componentRestrictions: { country: [\"il\"] },\n                                    }}\n                                    required\n                                    value={this.state.address}\n                                    onChange={this.handleChange}\n                                    onSelect={this.handleSelect}\n                                >\n                                    {({\n                                        getInputProps,\n                                        suggestions,\n                                        getSuggestionItemProps,\n                                        loading,\n                                    }) => (\n                                        <div>\n                                            <Input\n                                                {...getInputProps({\n                                                    placeholder: \"Search Places ...\",\n                                                    className: \"location-search-input\",\n                                                })}\n                                            />\n                                            <div className=\"autocomplete-dropdown-container\">\n                                                {loading && <div>Loading...</div>}\n                                                {suggestions.map((suggestion) => {\n                                                    const className = suggestion.active\n                                                        ? \"suggestion-item--active\"\n                                                        : \"suggestion-item\";\n                                                    // inline style for demonstration purpose\n                                                    const style = suggestion.active\n                                                        ? { backgroundColor: \"#fafafa\", cursor: \"pointer\" }\n                                                        : { backgroundColor: \"#ffffff\", cursor: \"pointer\" };\n                                                    return (\n                                                        <div\n                                                            {...getSuggestionItemProps(suggestion, {\n                                                                className,\n                                                                style,\n                                                            })}\n                                                        >\n                                                            <span>{suggestion.description}</span>\n                                                        </div>\n                                                    );\n                                                })}\n                                            </div>\n                                        </div>\n                                    )}\n                                </PlacesAutocomplete>\n                                <Row className=\"mx-1\">\n                                    <Map\n                                        google={this.props.google}\n                                        zoom={9}\n                                        style={{\n                                            height: \"97%\",\n                                            width: \"100%\"\n                                        }}\n                                        containerStyle={{\n                                            height: \"50%\",\n                                            width: \"93%\"\n                                        }}\n\n                                        initialCenter={{ lat: this.state.mapPosition.lat, lng: this.state.mapPosition.lng }}\n                                        center={{ lat: this.state.mapPosition.lat, lng: this.state.mapPosition.lng }}\n                                    >\n                                        {/* InfoWindow on top of marker */}\n                                        {this.state.selectedAddress && (\n                                            <InfoWindow\n                                                onClose={this.onInfoWindowClose}\n                                                position={{\n                                                    lat: this.state.markerPosition.lat + 0.0118,\n                                                    lng: this.state.markerPosition.lng,\n                                                }}\n                                            >\n                                                <div>\n                                                    <span style={{ padding: 0, margin: 0 }}>\n                                                        {this.state.selectedAddress}\n                                                    </span>\n                                                </div>\n                                            </InfoWindow>\n                                        )}\n                                        {/*Marker*/}\n                                        <GoogleMarker\n                                            draggable={true}\n                                            onDragend={(t, map, coord) => this.editMoveMark(coord)}\n                                            position={{\n                                                lat: this.state.markerPosition.lat,\n                                                lng: this.state.markerPosition.lng,\n                                            }}\n                                        />\n                                        <Marker />\n                                    </Map>\n                                </Row>\n                            </div>\n                        </ModalBody>\n                        <ModalFooter>\n                            <Button color=\"success\" type=\"submit\">Update</Button>{' '}\n                            <Button color=\"danger\" onClick={this.editToggle}>Cancel</Button>\n\n                        </ModalFooter>\n                    </Form>\n                </Modal>\n                {/* ********* End Edit Event Modal *********** */}\n\n\n                {/* ********* Add Event Modal *********** */}\n\n\n                <Modal isOpen={this.state.modal} toggle={this.toggle}>\n                    <ModalHeader toggle={this.toggle}>Add an Event</ModalHeader>\n                    <Form onSubmit={\n                        this.handleSubmit\n                    }>\n                        <ModalBody>\n                            <FormGroup>\n                                <Label>Title</Label>\n                                <Input\n                                    type=\"text\"\n                                    name=\"title\"\n                                    required\n                                    onChange={this.handlefieldChange}\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label>Description</Label>\n                                <Input\n                                    type=\"textarea\"\n                                    name=\"description\"\n                                    required\n                                    onChange={this.handlefieldChange}\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label>File (Audio/Image)</Label>\n                                <Row>\n                                    <Col xs={6}>\n                                        <Input\n                                            type=\"file\"\n                                            name=\"myFile\"\n                                            required\n                                            onChange={this.handleFile}\n                                        />\n                                    </Col>\n                                </Row>\n                            </FormGroup>\n                            <div className=\"form-group text-left\" style={{\n                                height: \"400px\"\n                            }}>\n                                <PlacesAutocomplete\n                                    className=\"autocomplete-signup\"\n                                    searchOptions={{\n                                        componentRestrictions: { country: [\"il\"] },\n                                    }}\n                                    required\n                                    value={this.state.address}\n                                    onChange={this.handleChange}\n                                    onSelect={this.handleSelect}\n                                >\n                                    {({\n                                        getInputProps,\n                                        suggestions,\n                                        getSuggestionItemProps,\n                                        loading,\n                                    }) => (\n                                        <div>\n                                            <Input\n                                                {...getInputProps({\n                                                    placeholder: \"Search Places ...\",\n                                                    className: \"location-search-input\",\n                                                })}\n                                            />\n                                            <div className=\"autocomplete-dropdown-container\">\n                                                {loading && <div>Loading...</div>}\n                                                {suggestions.map((suggestion) => {\n                                                    const className = suggestion.active\n                                                        ? \"suggestion-item--active\"\n                                                        : \"suggestion-item\";\n                                                    // inline style for demonstration purpose\n                                                    const style = suggestion.active\n                                                        ? { backgroundColor: \"#fafafa\", cursor: \"pointer\" }\n                                                        : { backgroundColor: \"#ffffff\", cursor: \"pointer\" };\n                                                    return (\n                                                        <div\n                                                            {...getSuggestionItemProps(suggestion, {\n                                                                className,\n                                                                style,\n                                                            })}\n                                                        >\n                                                            <span>{suggestion.description}</span>\n                                                        </div>\n                                                    );\n                                                })}\n                                            </div>\n                                        </div>\n                                    )}\n                                </PlacesAutocomplete>\n                                <Row className=\"mx-1\">\n                                    <Map\n                                        google={this.props.google}\n                                        zoom={9}\n                                        style={{\n                                            height: \"97%\",\n                                            width: \"100%\"\n                                        }}\n                                        containerStyle={{\n                                            height: \"50%\",\n                                            width: \"93%\"\n                                        }}\n\n                                        initialCenter={{ lat: this.state.mapPosition.lat, lng: this.state.mapPosition.lng }}\n                                        center={{ lat: this.state.mapPosition.lat, lng: this.state.mapPosition.lng }}\n                                    >\n                                        {/* InfoWindow on top of marker */}\n                                        {this.state.selectedAddress && (\n                                            <InfoWindow\n                                                onClose={this.onInfoWindowClose}\n                                                position={{\n                                                    lat: this.state.markerPosition.lat + 0.0118,\n                                                    lng: this.state.markerPosition.lng,\n                                                }}\n                                            >\n                                                <div>\n                                                    <span style={{ padding: 0, margin: 0 }}>\n                                                        {this.state.selectedAddress}\n                                                    </span>\n                                                </div>\n                                            </InfoWindow>\n                                        )}\n                                        {/*Marker*/}\n                                        <GoogleMarker\n                                            draggable={true}\n                                            onDragend={(t, map, coord) => this.moveMarker(coord)}\n                                            position={{\n                                                lat: this.state.markerPosition.lat,\n                                                lng: this.state.markerPosition.lng,\n                                            }}\n                                        />\n                                        {/* <Marker /> */}\n                                    </Map>\n                                </Row>\n                            </div>\n                        </ModalBody>\n                        <ModalFooter>\n                            <Button color=\"success\" type=\"submit\">Save</Button>{' '}\n                            <Button color=\"danger\" onClick={this.toggle}>Cancel</Button>\n\n                        </ModalFooter>\n                    </Form>\n                </Modal>\n                {/* ********* End Add Event Modal *********** */}\n            </>\n        )\n    }\n}\n\nexport function mapStateToProps(state) {\n    return {\n        myReports: state.report.myReports,\n        uid: state.auth.uid\n    }\n}\n\nexport function mapDispatchToProps(dispatch) {\n    return {\n        fetchMyReports: (id) => dispatch(fetchMyReports(id)),\n        deleteReport: (id) => dispatch(deleteReport(id)),\n        addReport: (report) => dispatch(addReport(report)),\n        updateReport: (report) => dispatch(updateReport(report)),\n    }\n}\n\nexport default (connect(mapStateToProps, mapDispatchToProps)(GoogleApiWrapper({\n    apiKey: \"AIzaSyCwVH3GTF_ZcPxr_diMo_AyVAW3A7GHbKQ\"\n})(Dashboard)))\n","import { FETCH_REPORT, FETCH_MY_REPORT } from \"../types\";\nimport firebase from \"../../config/firebase\"\nimport { toast } from 'react-toastify';\n\nexport const fetchReports = () => {\n    return (dispatch) => {\n        firebase\n            .firestore()\n            .collection(\"reports\")\n            .onSnapshot((query) => {\n                let reports = []\n                query.docs.forEach(doc => {\n                    reports.push({\n                        id: doc.id,\n                        createdAt: doc.data().createdAt.toDate(),\n                        ...doc.data()\n                    })\n                })\n                dispatch({\n                    type: FETCH_REPORT,\n                    reports\n                })\n            })\n    }\n}\n\nexport const fetchMyReports = (id) => {\n    return (dispatch) => {\n        firebase\n            .firestore()\n            .collection(\"reports\")\n            .where(\"created_by\", \"==\", id)\n            .onSnapshot(query => {\n                let myReports = []\n                query.docs.forEach(doc => {\n                    myReports.push({\n                        id: doc.id,\n                        createdAt: doc.data().createdAt.toDate(),\n                        ...doc.data()\n                    })\n                })\n                dispatch({\n                    type: FETCH_MY_REPORT,\n                    myReports\n                })\n            })\n    }\n}\n\nexport const deleteReport = (id) => {\n    return (dispatch) => {\n        firebase\n            .firestore()\n            .collection(\"reports\")\n            .doc(id)\n            .delete()\n            .then(() => {\n                toast.success(\"Report Deleted Successfully\")\n            })\n            .catch(error => {\n                alert(error.message)\n            })\n    }\n}\n\nexport const addReport = (report) => {\n    // console.log(\"report\", report)\n    return async (dispatch) => {\n\n        var geoPoint = new firebase.firestore.GeoPoint(report.coordinates.lat, report.coordinates.lng)\n        // console.log(\"gero\", geoPoint)\n        let customKey = firebase.firestore().collection(\"reports\").doc()\n\n        var fileName = report.myFile.name\n        var type = report.myFile.type\n        var finalType = type.split(\"/\")[0]\n        // let ext2 = fileName.split(\".\")[1]\n        let ext2 = fileName.slice(fileName.lastIndexOf(\".\"))\n        var file_name = customKey.id + ext2.toLowerCase()\n\n        var lets = await firebase\n            .storage()\n            .ref(\"event_files/\" + customKey.id + ext2.toLowerCase())\n            .put(report.myFile)\n\n        var url = await lets.ref.getDownloadURL()\n\n        if (geoPoint != null) {\n            var newReport = {\n                title: report.title,\n                description: report.description,\n                createdAt: firebase.firestore.Timestamp.now(),\n                created_by: report.created_by,\n                status: \"pending\",\n                files: [\n                    {\n                        type: finalType,\n                        url: url,\n                        name: file_name\n                    }\n                ],\n                coordinates: geoPoint\n            }\n            firebase\n                .firestore()\n                .collection(\"reports\")\n                .add(newReport)\n                .then(() => {\n                    toast.success(\"Report Added Successfully\")\n                })\n                .catch(error => {\n                    toast.warning(error)\n                })\n        }\n    }\n}\n\nexport const updateReport = (report) => {\n    // console.log(\"report\", report)\n    return async (dispatch) => {\n        if (report.myFile != \"\") {\n            var desertRef = await firebase\n                .storage()\n                .ref()\n                .child(`event_files/${report.myFileName}`);\n            // Delete the file\n            desertRef\n                .delete()\n                .then(function () {\n                    console.log(\"deleted succcessfully\");\n                })\n                .catch(function (error) {\n                    console.log(\"error\");\n                });\n        }\n\n        var geoPoint = new firebase.firestore.GeoPoint(report.coordinates.lat, report.coordinates.lng)\n        // console.log(\"gero\", geoPoint)\n        let customKey = firebase.firestore().collection(\"reports\").doc()\n        var url;\n        if (report.myFile) {\n            var fileName = report.myFile.name\n            var type = report.myFile.type\n            var finalType = type.split(\"/\")[0]\n            // let ext2 = fileName.split(\".\")[1]\n            let ext2 = fileName.slice(fileName.lastIndexOf(\".\"))\n            var file_name = customKey.id + ext2.toLowerCase()\n\n            var lets = await firebase\n                .storage()\n                .ref(\"event_files/\" + customKey.id + ext2.toLowerCase())\n                .put(report.myFile)\n\n            url = await lets.ref.getDownloadURL()\n        }\n        if (geoPoint != null) {\n            if (url) {\n                var updateReport = {\n                    title: report.title,\n                    description: report.description,\n                    created_by: report.created_by,\n                    status: \"pending\",\n                    files: [\n                        {\n                            type: finalType,\n                            url: url,\n                            name: file_name\n                        }\n                    ],\n                    coordinates: geoPoint\n                };\n            } else {\n                var updateReport = {\n                    title: report.title,\n                    description: report.description,\n                    created_by: report.created_by,\n                    status: \"pending\",\n                    coordinates: geoPoint\n                };\n            }\n            firebase\n                .firestore()\n                .collection(\"reports\")\n                .doc(report.id)\n                .update(updateReport)\n                .then(() => {\n                    toast.success(\"Report Updated Successfully\")\n                })\n                .catch(error => {\n                    toast.warning(error)\n                })\n        }\n\n    }\n}","import React, { Component } from 'react'\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Card, Badge, CardTitle, CardBody, CardText } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { fetchReports } from '../redux/actions/reportActions';\nimport moment from 'moment';\nimport { fetchUsers } from '../redux/actions/usersActions';\nexport class Maps extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            modal: false,\n            report: \"\"\n        }\n    }\n    componentDidMount() {\n        this.props.fetchReports()\n        this.props.fetchUsers()\n    }\n    toggle = () => {\n        this.setState({\n            modal: !this.state.modal\n        })\n    }\n    getUserEmail = (id) => {\n        if (id != undefined) {\n            if (this.props.users.length > 0) {\n                let obj = this.props.users.find(user => user.id == id)\n                return obj.email\n            } else {\n                return \"N/A\"\n            }\n        } else {\n            return \"N/A\"\n        }\n    }\n\n    render() {\n        const { reports, users } = this.props\n        const mapStyles = {\n            width: '100%',\n            height: '100%',\n        };\n        const containerStyle = {\n            width: '98%',\n            height: '90%',\n        };\n        return (\n            <>\n\n                <Map\n                    google={this.props.google}\n                    zoom={10}\n                    style={mapStyles}\n                    containerStyle={containerStyle}\n                    initialCenter={{ lat: 31.4117257, lng: 35.0818155 }}\n                >\n                    {\n                        reports && reports.map((report, index) => {\n                            return (\n                                <Marker key={index}\n                                    position={{ lat: report.coordinates.latitude, lng: report.coordinates.longitude }}\n                                    onClick={() => {\n                                        this.setState({\n                                            report: report\n                                        })\n                                        this.toggle();\n                                    }\n                                    }\n                                />\n                            )\n                        })\n                    }\n                </Map>\n                <Modal isOpen={this.state.modal} toggle={this.toggle}>\n                    <ModalHeader toggle={this.toggle}>Report</ModalHeader>\n                    <ModalBody>\n                        <Card className=\"report_card\">\n                            <CardBody>\n                                <CardTitle tag=\"h5\">{this.state.report.title}</CardTitle>\n                                <CardText>{this.state.report.description}</CardText>\n                                <Badge color=\"success\">{this.state.report.status}</Badge>\n                                <CardText className=\"mt-1\">Reported By <b>{this.getUserEmail(this.state.report.created_by)}</b></CardText>\n                                {\n                                    this.state.report.createdAt != null ?\n                                        <CardText className=\"mt-1\">Created at <b>{moment.unix(this.state.report.createdAt.seconds).format(\"DD-MM-YYYY hh:mm:ss\")}</b>{ }</CardText>\n                                        :\n                                        \"\"\n                                }\n                            </CardBody>\n                        </Card>\n                    </ModalBody>\n                </Modal>\n            </>\n        )\n    }\n}\nexport function mapStateToProps(state) {\n    return {\n        reports: state.report.report,\n        users: state.user.users\n    }\n}\nexport function mapDispatchToProps(dispatch) {\n    return {\n        fetchReports: () => dispatch(fetchReports()),\n        fetchUsers: () => dispatch(fetchUsers())\n    }\n}\n\nexport default (connect(mapStateToProps, mapDispatchToProps)(GoogleApiWrapper({\n    apiKey: \"AIzaSyCwVH3GTF_ZcPxr_diMo_AyVAW3A7GHbKQ\"\n})(Maps)))\n\n","import { FETCH_USER } from \"../types\";\nimport firebase from \"../../config/firebase\"\n\nexport const fetchUsers = () => {\n    return (dispatch) => {\n        firebase\n            .firestore()\n            .collection(\"users\")\n            .onSnapshot((query) => {\n                let users = []\n                query.docs.forEach(doc => {\n                    users.push({\n                        id: doc.id,\n                        ...doc.data()\n                    })\n                })\n                dispatch({\n                    type: FETCH_USER,\n                    users\n                })\n            })\n    }\n}","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport {\n    Container,\n} from 'reactstrap'\nimport Footer from '../components/Footer'\nimport Maps from './Maps'\n\nexport class Landing extends Component {\n    render() {\n        const { uid } = this.props\n        if (!uid) return <Redirect to=\"/auth/login\" />\n        return (\n            <>\n                <Container fluid style={{ minHeight: \"80vh\", marginBottom: \"5rem\" }}>\n                    <Maps />\n                </Container>\n            </>\n        )\n    }\n}\nexport function mapStateToProps(state) {\n    return {\n        uid: state.auth.uid\n    }\n}\nexport default connect(mapStateToProps, null)(Landing)\n","export default __webpack_public_path__ + \"static/media/login_side_img.28794e63.png\";","import React, { Component } from 'react'\nimport { Col, Row, Button, Form, FormGroup, Spinner, Label, Input, Container, Card } from 'reactstrap';\nimport logo from \"../assets/images/logo.png\"\nimport logo_side from \"../assets/images/login_side_img.png\"\nimport { Link, Redirect } from 'react-router-dom';\nimport { login, registeredComplete } from '../redux/actions/authActions';\nimport { connect } from 'react-redux';\nexport class Login extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            email: \"\",\n            password: \"\"\n        }\n    }\n\n    handleChange = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n    componentDidMount() {\n        this.props.registerComplete()\n    }\n\n    handleLogin = e => {\n        e.preventDefault()\n        let creds = {\n            email: this.state.email,\n            password: this.state.password\n        }\n        this.props.login(creds);\n        this.setState({\n            email: \"\",\n            password: \"\"\n        })\n    }\n\n    render() {\n        const { uid, loading } = this.props\n        if (uid) return <Redirect to=\"/main/index\" />\n        return (\n            <>\n                <Container fluid className=\"auth-container\">\n                    <Row className=\"justify-content-center\">\n                        <Col md={6} className=\"p-0\">\n                            <div className=\"text-center login\">\n                                <div className=\"auth-card\">\n                                    <img src={logo} alt=\"logo\" className=\"mb-2 mt-5\" style={{ height: \"100px\", width: \"80px\" }} />\n                                    <h2 className=\"mb-5 mt-5\" style={{ color: \"#5E862A\" }}>Reporting Platform</h2>\n                                    <Row className=\"justify-content-center\">\n                                        <Col md={6}>\n                                            <Form onSubmit={this.handleLogin}>\n                                                <Row>\n                                                    <Col>\n                                                        <FormGroup>\n                                                            <Input className=\"input\" required type=\"email\" name=\"email\" onChange={this.handleChange} />\n                                                            <Label className=\"left\">Email</Label>\n                                                        </FormGroup>\n                                                    </Col>\n                                                </Row>\n                                                <Row>\n                                                    <Col>\n                                                        <FormGroup>\n                                                            <Input className=\"input\" required type=\"password\" name=\"password\" onChange={this.handleChange} />\n                                                            <Label className=\"left\">Password</Label>\n                                                        </FormGroup>\n                                                    </Col>\n                                                </Row>\n                                                {/* <Link to=\"/\"> */}\n                                                <Button\n                                                    className=\"mt-5 px-5\"\n                                                    type=\"submit\"\n                                                    style={{ background: \"#01D472\", padding: 10, borderRadius: 20, fontSize: 30, border: \"none\" }}\n                                                >\n                                                    {loading ? <Spinner size=\"md\" /> : \"Login\"}\n                                                </Button>\n                                                {/* </Link> */}\n                                            </Form>\n                                        </Col>\n                                    </Row>\n                                </div>\n                            </div>\n                        </Col>\n                        <Col md={6} className=\"p-0 text-center\">\n                            <div className=\"d-flex justify-content-center mt-3\">\n                                <h6 className=\"mt-2 mx-2\">\n                                    <b className=\"text-white\">Don't have an account?</b>\n                                </h6>\n                                <Link to=\"/auth/register\">\n                                    <Button\n                                        style={{ background: '#01D472', padding: 10, borderRadius: 10, border: \"none\" }}\n                                    >\n                                        Create Your Account\n                                    </Button>\n                                </Link>\n                            </div>\n                            <img src={logo_side} alt=\"logo_side\" className=\"mt-3\" height=\"600px\" />\n                        </Col>\n                    </Row>\n                </Container>\n            </>\n        )\n    }\n}\nexport function mapStateToProps(state) {\n    return {\n        uid: state.auth.uid,\n        loading: state.auth.loading\n    }\n}\nexport function mapDispatchToProps(dispatch) {\n    return {\n        login: (creds) => dispatch(login(creds)),\n        registerComplete: () => dispatch(registeredComplete())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)\n","export default __webpack_public_path__ + \"static/media/check.8a72427d.png\";","import React, { Component } from 'react'\nimport { Col, Row, Button, Form, FormGroup, Spinner, Label, Input, Container, Card } from 'reactstrap';\nimport logo from \"../assets/images/logo.png\"\nimport check from \"../assets/images/check.png\"\nimport { Link, Redirect } from 'react-router-dom';\nimport { register } from '../redux/actions/authActions';\nimport { connect } from 'react-redux';\nexport class Register extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            email: \"\",\n            password: \"\"\n        }\n    }\n\n    handleChange = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    handleRegister = e => {\n        e.preventDefault();\n        let creds = {\n            email: e.target.email.value,\n            password: e.target.password.value\n        }\n        this.props.register(creds);\n        this.setState({\n            email: \"\",\n            password: \"\"\n        })\n    }\n    redirect = () => {\n        this.props.history.push(\"/auth/login\")\n    }\n    render() {\n        const { loading } = this.props\n        return (\n            <>\n                <Container fluid className=\"auth-container\">\n                    <Row className=\"justify-content-center\">\n                        <Col md={6} className=\"p-0 text-center\">\n                            <img src={logo} alt=\"logo\" className=\"mb-2 mt-5\" style={{ height: \"100px\", width: \"80px\" }} />\n                            <h4 className=\"text-white mt-5\"\n                                style={{ fontSize: \"36px\" }}\n                            >\n                                <b>\n                                    Get Started with Report\n                                </b>\n                            </h4>\n                            <h4 className=\"text-white mt-5\"\n                                style={{ fontSize: \"36px\", fontWeight: 200 }}\n                            >\n                                Get Things Done Quickly\n                            </h4>\n                            <img src={check} alt=\"check\" height=\"200px\" className=\"mt-5\" />\n                        </Col>\n                        <Col md={6} className=\"p-0\">\n                            <div className=\"text-center register\">\n                                <div className=\"auth-card\">\n                                    <h2 className=\"mb-5 mt-5\">Create Account</h2>\n                                    <Row className=\"justify-content-center\">\n                                        <Col md={6} className=\"mt-5\">\n                                            <Form\n                                                onSubmit={\n                                                    this.handleRegister\n                                                }\n                                            >\n                                                <Row>\n                                                    <Col>\n                                                        <FormGroup>\n                                                            <Input className=\"input\" required type=\"email\" name=\"email\" onChange={this.handleChange} />\n                                                            <Label className=\"left\">Email</Label>\n                                                        </FormGroup>\n                                                    </Col>\n                                                </Row>\n                                                <Row>\n                                                    <Col>\n                                                        <FormGroup>\n                                                            <Input className=\"input\" required type=\"password\" name=\"password\" onChange={this.handleChange} />\n                                                            <Label className=\"left\">Password</Label>\n                                                        </FormGroup>\n                                                    </Col>\n                                                </Row>\n                                                <Button\n                                                    className=\"mt-5\"\n                                                    style={{ background: \"#01D472\", padding: 10, borderRadius: 20, width: \"80%\", fontSize: 30, border: \"none\" }}\n                                                >\n                                                    {loading ? <Spinner size=\"md\" /> : \"Create Account\"}\n                                                </Button>\n                                                {\n                                                    this.props.registered ? this.redirect() : null\n                                                }\n                                                <Link to=\"/auth/login\">\n                                                    <h6 className=\"mt-4\" style={{ cursor: \"pointer\", color: \"black\" }}>\n                                                        <b><u>\n                                                            Alreay Have an Account? Login\n                                                        </u></b>\n                                                    </h6>\n                                                </Link>\n                                            </Form>\n                                        </Col>\n                                    </Row>\n                                </div>\n                            </div>\n                        </Col>\n                    </Row>\n                </Container>\n            </>\n        )\n    }\n}\n\nexport function mapStateToProps(state) {\n    return {\n        loading: state.auth.requested,\n        registered: state.auth.registered\n    }\n}\n\nexport function mapDispatchToProps(dispatch) {\n    return {\n        register: (creds) => dispatch(register(creds))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Register)\n","import Dashboard from \"../views/Dashboard\"\nimport Landing from \"../views/Landing\"\nimport Login from \"../views/Login\"\nimport Register from \"../views/Register\"\n\nconst route = [\n    {\n        path: \"/login\",\n        component: Login,\n        layout: \"/auth\"\n    },\n    {\n        path: \"/register\",\n        component: Register,\n        layout: \"/auth\"\n    },\n    {\n        path: \"/index\",\n        component: Landing,\n        layout: \"/main\"\n    },\n    {\n        path: \"/dashboard\",\n        component: Dashboard,\n        layout: \"/main\"\n    }\n\n]\nexport default route","import React, { Component } from 'react'\nimport { Route, Switch, Redirect } from 'react-router';\nimport Footer from '../components/Footer';\nimport Header from \"../components/Header\"\nimport routes from '../routes'\nexport class Main extends Component {\n    getRoutes = (routes) => {\n        return routes.map((prop, key) => {\n            if (prop.layout === \"/main\") {\n                return (\n                    <Route\n                        path={prop.layout + prop.path}\n                        component={prop.component}\n                        key={key}\n                    />\n                );\n            } else {\n                return null;\n            }\n        });\n    };\n    render() {\n        return (\n            <>\n                <Header />\n                <div>\n                    <Switch>\n                        {this.getRoutes(routes)}\n                        <Redirect from=\"*\" to=\"/main/index\" />\n                    </Switch>\n                </div>\n                <Footer />\n            </>\n        )\n    }\n}\n\nexport default Main\n","import React, { Component } from 'react'\nimport { Redirect, Route, Switch } from 'react-router'\nimport routes from '../routes'\nexport class Auth extends Component {\n    getRoutes = (routes) => {\n        return routes.map((prop, key) => {\n            if (prop.layout === \"/auth\") {\n                return (\n                    <Route\n                        path={prop.layout + prop.path}\n                        component={prop.component}\n                        key={key}\n                    />\n                )\n            } else {\n                return null\n            }\n        })\n    }\n    render() {\n        return (\n            <>\n                <Switch>\n                    {this.getRoutes(routes)}\n                    <Redirect from=\"*\" to=\"/auth/login\" />\n                </Switch>\n            </>\n        )\n    }\n}\n\nexport default Auth\n","import { BrowserRouter, Route, Router, Switch } from \"react-router-dom\";\nimport { Redirect } from \"react-router\";\nimport Main from \"./layout/Main\";\nimport Auth from \"./layout/Auth\";\nimport { connect } from \"react-redux\";\nimport React, { Component } from 'react'\n\nexport class App extends Component {\n  render() {\n    const { uid } = this.props\n    return (\n      <>\n        <BrowserRouter>\n          {uid\n            ?\n            <Switch>\n              <Route path=\"/main\" render={props => <Main {...props} />} />\n              <Redirect from=\"/\" to=\"/main\" />\n            </Switch>\n            :\n            <Switch>\n              <Route path=\"/auth\" render={props => <Auth {...props} />} />\n              <Redirect from=\"/\" to=\"/auth/login\" />\n            </Switch>\n          }\n        </BrowserRouter>\n\n      </>\n    );\n  }\n}\n\n\nexport function mapStateToProps(state) {\n  return {\n    uid: state.auth.uid\n  }\n}\nexport default connect(mapStateToProps, null)(App);\n","import { ACTION_REQUEST, ACTION_REQUEST_END, LOGIN_FAIL, LOGIN_REQUEST, LOGIN_REQUEST_END, LOGIN_SUCCESS, LOGOUT_SUCCESS, REGISTER_FAIL, REGISTER_SUCCESS } from \"../types\";\n\nconst initState = {\n    authError: \"\",\n    uid: \"\",\n    requested: false,\n    registered: false,\n    user: null,\n    loading: false\n};\nconst authReducer = (state = initState, action) => {\n    switch (action.type) {\n        case LOGIN_SUCCESS:\n            return {\n                ...state,\n                uid: action.user.id,\n                user: { ...action.user },\n                authError: \"\",\n            }\n        case LOGIN_FAIL:\n            localStorage.clear()\n            return {\n                ...state,\n                uid: \"\",\n                authError: action.error.message,\n            }\n        case REGISTER_SUCCESS:\n            return {\n                ...state,\n                authError: \"\",\n                registered: true,\n            }\n        case REGISTER_FAIL:\n            return {\n                ...state,\n            }\n        case \"REGISTER_COMPLETE\":\n            return {\n                ...state,\n                registered: false,\n            }\n        case LOGOUT_SUCCESS:\n            return {\n                ...state,\n                authError: \"\",\n                uid: \"\",\n                registered: false,\n                user: null\n            };\n        case ACTION_REQUEST:\n            return {\n                ...state,\n                requested: true,\n            }\n        case ACTION_REQUEST_END:\n            return {\n                ...state,\n                requested: false,\n            }\n        case LOGIN_REQUEST:\n            return {\n                ...state,\n                loading: true,\n            }\n        case LOGIN_REQUEST_END:\n            return {\n                ...state,\n                loading: false,\n            }\n        default:\n            return {\n                ...state\n            }\n    }\n}\nexport default authReducer","import { FETCH_REPORT, FETCH_MY_REPORT } from \"../types\"\n\nconst initState = {\n    report: [],\n    myReports: []\n}\n\nconst reportReducer = (state = initState, action) => {\n    switch (action.type) {\n        case FETCH_REPORT:\n            return {\n                ...state,\n                report: action.reports\n            }\n        case FETCH_MY_REPORT:\n            return {\n                ...state,\n                myReports: action.myReports\n\n            }\n        default: return {\n            ...state\n        }\n    }\n}\nexport default reportReducer","import { FETCH_USER } from \"../types\"\n\nconst initState = {\n    users: []\n}\n\nconst usersReducer = (state = initState, action) => {\n    switch (action.type) {\n        case FETCH_USER:\n            return {\n                ...state,\n                users: action.users\n            }\n        default: return {\n            ...state\n        }\n    }\n}\nexport default usersReducer","import { combineReducers } from \"redux\";\nimport authReducer from \"./authReducers\";\nimport reportReducer from \"./reportReducers\";\nimport usersReducer from \"./usersReducers\";\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    report: reportReducer,\n    user: usersReducer\n})\nexport default rootReducer","import { createStore, applyMiddleware } from \"redux\"\nimport thunk from \"redux-thunk\"\nimport rootReducer from \"./reducers/rootReducers\";\nimport { compose } from \"redux\";\n\nconst saveToLocalStorage = (state) => {\n    const serializedUid = JSON.stringify(state.auth);\n    localStorage.setItem(\"auth\", serializedUid);\n};\nconst checkLocalStorage = () => {\n    const serializedUid = localStorage.getItem(\"auth\");\n    if (serializedUid === null) return undefined;\n    return {\n        auth: JSON.parse(serializedUid),\n    };\n};\nconst comp = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n    rootReducer,\n    checkLocalStorage(),\n    comp(applyMiddleware(thunk))\n);\nstore.subscribe(() => saveToLocalStorage(store.getState()));\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport './assets/css/styles.css'\nimport App from './App';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n      <ToastContainer />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}